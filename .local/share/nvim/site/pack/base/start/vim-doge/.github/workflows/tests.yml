name: Tests
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

jobs:
  tests_vim:
    name: Vim
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        vim-version: [v7.4.2119, head]
        node-version: [10, 12, 14]
        include:
          - os: macos-latest
            target: macos
          - os: ubuntu-latest
            target: linux
          - os: windows-latest
            target: win
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout kkoomen/vim-doge
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Checkout junegunn/vader.vim
        uses: actions/checkout@v2
        with:
          repository: junegunn/vader.vim
          path: vader.vim
      - name: Setup nodejs
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci --no-save
      - name: Build Unix binary
        if: matrix.target != 'win'
        run: npm run build:binary:unix -- node${{ matrix.node-version }}-${{ matrix.target }}-x64
      - name: Build Windows binary
        if: matrix.target == 'win'
        run: npm run build:binary:windows -- node${{ matrix.node-version }}-${{ matrix.target }}-x64
      - name: Setup vim
        uses: thinca/action-setup-vim@v1
        id: vim
        with:
          vim_version: ${{ matrix.vim-version }}
          vim_type: vim
      - name: Run tests
        run: ./scripts/run-vader-tests.sh "${{ steps.vim.outputs.executable }}"
        shell: bash

  tests_neovim:
    name: NeoVim
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        vim-version: [v0.3.2, head]
        node-version: [10, 12, 14]
        include:
          - os: macos-latest
            target: macos
          - os: ubuntu-latest
            target: linux
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout kkoomen/vim-doge
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Checkout junegunn/vader.vim
        uses: actions/checkout@v2
        with:
          repository: junegunn/vader.vim
          path: vader.vim
      - name: Setup nodejs
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci --no-save
      - name: Build binary
        run: npm run build:binary:unix -- node${{ matrix.node-version }}-${{ matrix.target }}-x64
      - name: Setup neovim
        uses: thinca/action-setup-vim@v1
        id: vim
        with:
          vim_version: ${{ matrix.vim-version }}
          vim_type: neovim
      - name: Run tests
        run: ./scripts/run-vader-tests.sh "${{ steps.vim.outputs.executable }}"
        shell: bash

  vint:
    name: Linter
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - run: pip install vim-vint
      - run: vint -s ./autoload ./plugin
