# ==============================================================================
# Function definitions with parameters with return type.
# ==============================================================================
Given c (function definition with parameters with return type):
  int add(int x, int y) {}

Do (trigger doge):
  :let b:doge_doc_standard='kernel_doc'\<CR>
  \<C-d>

Expect c (generated comment with the function name, all parameter tags, a description and a 'Return' keyword):
  /**
   * add(): [TODO:description]
   * @x: [TODO:description]
   * @y: [TODO:description]
   *
   * [TODO:description]
   *
   * Return: [TODO:description]
   */
  int add(int x, int y) {}

# ==============================================================================
# Function definitions with parameters with 'void' return type.
# ==============================================================================
Given c (function definition with parameters with 'void' return type):
  void add(int x, int y) {}

Do (trigger doge):
  :let b:doge_doc_standard='kernel_doc'\<CR>
  \<C-d>

Expect c (generated comment with the function name, all parameter tags, and a description):
  /**
   * add(): [TODO:description]
   * @x: [TODO:description]
   * @y: [TODO:description]
   *
   * [TODO:description]
   */
  void add(int x, int y) {}
